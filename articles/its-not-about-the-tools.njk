---
layout: layouts/article-layout.njk
title: "Test automation tools: why they don't matter"
date: 2020-07-19
tags: ["article"]
preview: "Let's play a game: how many test automation tools, frameworks or libraries can you name?"
description: "Everyone talks about test automation tools, libraries and frameworks: Jest, Cypress, Katalon, Cucumber ... But they're all missing the point."
---
<h1>{{ title }}</h1>
<p>Let's play a game: how many test automation tools, frameworks and libraries can you name? No googling, off the top of your head!</p>
<p>I'll start:</p>
<ul>
    <li>Jest</li>
    <li>Junit</li>
    <li>Selenium</li>
    <li>Protractor</li>
    <li>Ranorex</li>
    <li>Cypress</li>
    <li>Mocha</li>
    <li>Chai</li>
    <li>Katalon</li>
    <li>Mockito</li>
    <li>Cucumber</li>
    <li>Karma</li>
</ul>
<p>That's pretty damn long! Why can I name so many of these, yet I barely know any of them well enough to effectively use them?</p>
<h2>Tooling is not the answer</h2>
<p>For simplicity's sake, we'll call all of the above "tools". Let's assume you're a tester. Or a developer. Or anyone remotely involved in testing applications. At some point, your boss will come up to you and say "Listen, we need to start thinking about test automation".</p>
<p>Hold it! Your first thought is to say "Great, I'll do some research into which tools we can use for that". Whatever you do, don't do it! Concentrate as hard as you can, flex every damn muscle in your body and ask the only question that's important: <strong>"What are we expecting to achieve?"</strong>.</p>
<h2>Watch out, it's a trap</h2>
<p>The problem with test automation is very simple. <strong>Workload is next to none, the value it brings is astronomical.</strong> Wait, what? Well, at least that's what your colleagues think. It will catch every tiny miny bug, whilst blocking your deploy to production and spitting out perfectly comprehensible error messages. How hard can it be?</p>
<h2>Figure out what's really important</h2>
<p>It seems like I'm being overly cynical here about the value of test automation. Don't get me wrong. It <i>can</i> provide lots of value. But it's sooooooo easy to fall into the rabbit hole.</p>
<iframe src="https://giphy.com/embed/11e0gEWxYoSYTK" width="480" height="197" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
<p>So go easy on your boss and provide some possible answers to "What are we expecting to achieve?":</p>
<ul>
    <li>Reducing test efforts so there's more time for other tasks like requirements analysis or reporting.</li>
    <li>Reducing the amount of bugs that make it to production to improve customer satisfaction.</li>
    <li>Automate testing of crucial user flows (log-in, search, purchase ...) as an extra layer of security.</li>
    <li><i>Insert any other relevant goal here</i></li>
</ul>
<p>If the answer is unclear, try again. Maybe not the same day, but the day after. Or the week after. If the answer changes, challenge it. Don't sit there like a scared little puppy. If you are the one taking this on, you'll be held responsible for achieving those goals. And rule number one: don't promise what you can't deliver.</p>
<h2>Ask for the numbers</h2>
<p>Always ask for numbers. I'm talking code coverage, percentage of user flows automated, number of executed test cases per month ... Go crazy. They probably won't be able to answer this right away. And the numbers will change, they always do. But it will give them something to think about.</p>